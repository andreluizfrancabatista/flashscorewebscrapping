# -*- coding: utf-8 -*-
"""MonteCarloSimulations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1taa8SHdH1XqJ8Ibr6SQXDqEvHoMVlUW-

Entrada: código da partida. Ex.: ABeTIT3c

Saída: tabela de probabilidades como na página 68 do livro sobre Monte Carlo Simulations
"""

import math
import pandas as pd
import numpy as np
import seaborn as sns

def poisson(x, mean):
  return round(((math.exp(-mean) * (pow(mean, x)))/(math.factorial(x)) *100),2)

mean1 = 1.5 # mean ou xG 1.264 Aston Vila (livro)
mean2 = 1.93 # mean ou xG 1.596 Sheffield (livro)
ngols = 6

data = {
    "Home":[],
    "Away":[]
}

data["Home"] = [poisson(x, mean1) for x in range(ngols+1)]
data["Away"] = [poisson(x, mean2) for x in range(ngols+1)]

# for i in range(0, ngols+1):
#   data["AV"].append(poisson(i, mean1))
#   data["SH"].append(poisson(i, mean2))

print(data)

g1 = np.arange(ngols+1)
s1 = pd.Series(data["Home"])
s2 = pd.Series(data["Away"])

tuples1 = list(zip(g1, s1))
tuples2 = list(zip(g1, s2))

index1 = pd.MultiIndex.from_tuples(tuples1, names=["gols", "prob"])
index2 = pd.MultiIndex.from_tuples(tuples2, names=["gols", "prob"])

df = pd.DataFrame(1, index=index1, columns=index2)

s1 = pd.Series(df.index.get_level_values(1))
s2 = pd.Series(df.columns.get_level_values(1))
df1 = pd.DataFrame(1, index=s1.index, columns=s2.index)
new = round((df1.multiply(s1, axis='index') * s2 / 100),2)
new.style.background_gradient(cmap="Blues").format(precision=2)

print(new)
print(f'Max: {new.to_numpy().max()}')
sum = new.to_numpy().sum()
print(f'Sum: {sum}')

sum = 0
for h in range(0, 3):
  for a in range(0, 3):
    if(h + a < 2.5):
      print(f'{h} x {a} : {new[h][a]}')
      sum += new[h][a]
print(sum)