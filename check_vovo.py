# -*- coding: utf-8 -*-
"""WebScraping - FlashScore.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qr3mASEik_iesvvoel-5v63csKk1feuj

Criado por:
*   Eduardo Lemos (@esniq1)
*   Leandro Filho (@futpythontrader)

# Instalando as Bibliotecas e as Dependências
"""

# Instalando o Selenium
# !pip install selenium

# Atualizando o Ubuntu para executar corretamento o apt-install
# !apt-get update

# Instalando o ChromeDrive e Trazendo ele para a Pasta Local
# !apt install chromium-chromedriver

# !cp /usr/lib/chromium-browser/chromedriver /usr/bin
import sys
sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')

"""# Configuração do Web-Driver"""

# Utilizando o WebDriver do Selenium
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager

# Instanciando o Objeto ChromeOptions
options = webdriver.ChromeOptions()

# Passando algumas opções para esse ChromeOptions
options.add_argument('--headless')
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
options.add_argument('--start-maximized')
options.add_argument('--ignore-certificate-errors')
options.add_argument('--disable-crash-reporter')
options.add_argument('--log-level=3')


# Criação do WebDriver do Chrome
# wd_Chrome = webdriver.Chrome('chromedriver',options=options)
wd_Chrome = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)

"""# Importando as Bibliotecas"""

import pandas as pd
import time
from tqdm import tqdm
from selenium.webdriver.common.by import By

"""# Iniciando a Raspagem de Dados"""

# Com o WebDrive a gente consegue a pedir a página (URL)
wd_Chrome.get("https://www.flashscore.com/") 
time.sleep(2)

## Para jogos do dia seguinte / Comentar essa linha para os jogos agendados de hoje 
# wd_Chrome.find_element(By.CSS_SELECTOR,'button.calendar__navigation--tomorrow').click()
# time.sleep(2)

# Clicar na aba ODDS
odds_matches = wd_Chrome.find_elements(By.CSS_SELECTOR, 'div.filters__tab')
odds_matches = odds_matches[2]
wd_Chrome.execute_script("arguments[0].click();", odds_matches)

# Abrir os jogos fechados
display_matches = wd_Chrome.find_elements(By.CSS_SELECTOR, 'span._simpleText_ghuv4_5') #'button._accordion_bydh9_5')_simpleText_ghuv4_5 
for button in display_matches:
    wd_Chrome.execute_script("arguments[0].click();", button)
time.sleep(2)

# Pegando o ID dos Jogos
id_jogos = []
## Para jogos agendados (próximos)
# jogos = wd_Chrome.find_elements(By.CSS_SELECTOR,'div.event__match--scheduled')

## Para jogos ao vivo (live)
jogos = wd_Chrome.find_elements(By.CSS_SELECTOR,'div.event__match--live')

for i in jogos:
    id_jogos.append(i.get_attribute("id"))

# Exemplo de ID de um jogo: 'g_1_Gb7buXVt'
id_jogos = [i[4:] for i in id_jogos]

jogo = {
    'Date':[],'Time':[],'Country':[],'League':[],'Home':[],'Away':[],
    'golshtHome':[], 'totalHome':[], 'AvgHome':[], 
    'golshtAway':[], 'totalAway':[], 'AvgAway':[], 
    'pHome':[], 'pAway':[], 'Sum':[]
}

for i in jogos:
    try:
        id = i.get_attribute("id")
        id = id[4:]
        Time = i.find_element(By.CSS_SELECTOR, 'div.event__stage--block').text
        if "Half" in Time:
            Time = "HT"
        if "Break" in Time:
            Time = "BT"
        if "Awaiting" in Time:
            Time = "AU"
        Home = i.find_element(By.CSS_SELECTOR, 'div.event__participant--home').text
        Away = i.find_element(By.CSS_SELECTOR, 'div.event__participant--away').text
        PHome = i.find_element(By.CSS_SELECTOR, 'div.event__score--home').text
        PAway = i.find_element(By.CSS_SELECTOR, 'div.event__score--away').text
        PHome = int(PHome)
        PAway = int(PAway)
        oddHome = i.find_element(By.CSS_SELECTOR, 'div.event__odd--odd1').text
        oddDraw = i.find_element(By.CSS_SELECTOR, 'div.event__odd--odd2').text
        oddAway = i.find_element(By.CSS_SELECTOR, 'div.event__odd--odd3').text
        link = f'https://www.flashscore.com/match/{id}/#/match-summary/match-summary'
        # if (abs(PHome-PAway) >= 2):
        #     wd_Chrome.get(link)
        #     try:
        #         oddHome = wd_Chrome.find_element(By.CSS_SELECTOR, 'span.o_1  ').text
        #         # Tá dando erro aqui, quando entra no if, ele trava no id que entrou no if
        #         # oddDraw = odds[1].text
        #         # oddAway = odds[2].find_element(By.CSS_SELECTOR, 'span.oddsValueInner').text
        #     except Exception as error:
        #         print(f'{error} :: {link}')
        #         pass

        # print(f'{Time} \t {Home} ({PHome}) x ({PAway}) {Away} : {oddHome} : {link}')
        print(f'{Time} \t {Home} ({PHome}) x ({PAway}) {Away}\n{oddHome} {oddDraw} {oddAway}')
        
    except:
        print(id)
        pass